{"ast":null,"code":"var _jsxFileName = \"/home/sourabh/Documents/Project-and-Task-Management-System/frontend/src/components/TaskBoard.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport Column from './Column';\nimport { getTasks, createTask, updateTask, deleteTask } from '../services/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function TaskBoard({\n  project\n}) {\n  _s();\n  const [tasks, setTasks] = useState([]);\n  const [title, setTitle] = useState('');\n  const [desc, setDesc] = useState('');\n  const [status, setStatus] = useState('To Do');\n  const columns = ['To Do', 'In Progress', 'Done'];\n  useEffect(() => {\n    if (project) refreshTasks();\n  }, [project]);\n  const refreshTasks = async () => {\n    const data = await getTasks(project._id);\n    setTasks(data);\n  };\n\n  // --- Add Task ---\n  const handleAdd = async () => {\n    if (!title) return alert('Title required');\n    await createTask(project._id, {\n      title,\n      description: desc,\n      status\n    });\n    setTitle('');\n    setDesc('');\n    setStatus('To Do');\n    refreshTasks();\n  };\n\n  // --- Edit Task ---\n  const handleEdit = async task => {\n    const newTitle = prompt('Edit Title', task.title);\n    if (newTitle === null) return;\n    const newDesc = prompt('Edit Description', task.description || '');\n    const newStatus = prompt('Edit Status (To Do, In Progress, Done)', task.status) || task.status;\n    await updateTask(task._id, {\n      title: newTitle,\n      description: newDesc,\n      status: newStatus\n    });\n    refreshTasks();\n  };\n\n  // --- Delete Task ---\n  const handleDelete = async taskId => {\n    if (!window.confirm('Delete this task?')) return;\n    await deleteTask(taskId);\n    refreshTasks();\n  };\n\n  // --- Move Task between columns ---\n  const moveTask = async (task, newStatus) => {\n    if (task.status === newStatus) return;\n    await updateTask(task._id, {\n      status: newStatus\n    });\n    refreshTasks();\n  };\n  if (!project) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Select a project to view its board\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 24\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: project.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-row\",\n      style: {\n        marginBottom: 12\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        placeholder: \"Task title\",\n        value: title,\n        onChange: e => setTitle(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        placeholder: \"Description\",\n        value: desc,\n        onChange: e => setDesc(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        value: status,\n        onChange: e => setStatus(e.target.value),\n        children: columns.map(c => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: c,\n          children: c\n        }, c, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleAdd,\n        children: \"Add Task\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex',\n        gap: 12\n      },\n      children: columns.map(col => /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          flex: 1,\n          border: '1px solid #ccc',\n          borderRadius: 6,\n          padding: 8,\n          backgroundColor: '#f9f9f9',\n          minHeight: 200\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: col\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Column, {\n          title: col,\n          tasks: tasks.filter(t => t.status === col),\n          onEdit: handleEdit,\n          onDelete: handleDelete\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            marginTop: 8\n          },\n          children: tasks.filter(t => t.status !== col).map(t => /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => moveTask(t, col),\n            style: {\n              marginRight: 6,\n              marginBottom: 4,\n              fontSize: '0.8em'\n            },\n            children: [\"Move \\\"\", t.title, \"\\\" \\u2192 \", col]\n          }, t._id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 19\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 13\n        }, this)]\n      }, col, true, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n}\n_s(TaskBoard, \"YpttT45IJiIl/dQ3UelThmey3aA=\");\n_c = TaskBoard;\nvar _c;\n$RefreshReg$(_c, \"TaskBoard\");","map":{"version":3,"names":["React","useState","useEffect","Column","getTasks","createTask","updateTask","deleteTask","jsxDEV","_jsxDEV","TaskBoard","project","_s","tasks","setTasks","title","setTitle","desc","setDesc","status","setStatus","columns","refreshTasks","data","_id","handleAdd","alert","description","handleEdit","task","newTitle","prompt","newDesc","newStatus","handleDelete","taskId","window","confirm","moveTask","children","fileName","_jsxFileName","lineNumber","columnNumber","name","className","style","marginBottom","placeholder","value","onChange","e","target","map","c","onClick","display","gap","col","flex","border","borderRadius","padding","backgroundColor","minHeight","filter","t","onEdit","onDelete","marginTop","marginRight","fontSize","_c","$RefreshReg$"],"sources":["/home/sourabh/Documents/Project-and-Task-Management-System/frontend/src/components/TaskBoard.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport Column from './Column';\nimport { getTasks, createTask, updateTask, deleteTask } from '../services/api';\n\nexport default function TaskBoard({ project }) {\n  const [tasks, setTasks] = useState([]);\n  const [title, setTitle] = useState('');\n  const [desc, setDesc] = useState('');\n  const [status, setStatus] = useState('To Do');\n\n  const columns = ['To Do', 'In Progress', 'Done'];\n\n  useEffect(() => {\n    if (project) refreshTasks();\n  }, [project]);\n\n  const refreshTasks = async () => {\n    const data = await getTasks(project._id);\n    setTasks(data);\n  };\n\n  // --- Add Task ---\n  const handleAdd = async () => {\n    if (!title) return alert('Title required');\n    await createTask(project._id, { title, description: desc, status });\n    setTitle(''); setDesc(''); setStatus('To Do');\n    refreshTasks();\n  };\n\n  // --- Edit Task ---\n  const handleEdit = async (task) => {\n    const newTitle = prompt('Edit Title', task.title);\n    if (newTitle === null) return;\n    const newDesc = prompt('Edit Description', task.description || '');\n    const newStatus = prompt('Edit Status (To Do, In Progress, Done)', task.status) || task.status;\n    await updateTask(task._id, { title: newTitle, description: newDesc, status: newStatus });\n    refreshTasks();\n  };\n\n  // --- Delete Task ---\n  const handleDelete = async (taskId) => {\n    if (!window.confirm('Delete this task?')) return;\n    await deleteTask(taskId);\n    refreshTasks();\n  };\n\n  // --- Move Task between columns ---\n  const moveTask = async (task, newStatus) => {\n    if (task.status === newStatus) return;\n    await updateTask(task._id, { status: newStatus });\n    refreshTasks();\n  };\n\n  if (!project) return <div>Select a project to view its board</div>;\n\n  return (\n    <div>\n      <h3>{project.name}</h3>\n\n      {/* Add Task Form */}\n      <div className=\"form-row\" style={{ marginBottom: 12 }}>\n        <input\n          placeholder=\"Task title\"\n          value={title}\n          onChange={(e) => setTitle(e.target.value)}\n        />\n        <input\n          placeholder=\"Description\"\n          value={desc}\n          onChange={(e) => setDesc(e.target.value)}\n        />\n        <select value={status} onChange={(e) => setStatus(e.target.value)}>\n          {columns.map((c) => (\n            <option key={c} value={c}>{c}</option>\n          ))}\n        </select>\n        <button onClick={handleAdd}>Add Task</button>\n      </div>\n\n      {/* Kanban Board */}\n      <div style={{ display: 'flex', gap: 12 }}>\n        {columns.map((col) => (\n          <div\n            key={col}\n            style={{\n              flex: 1,\n              border: '1px solid #ccc',\n              borderRadius: 6,\n              padding: 8,\n              backgroundColor: '#f9f9f9',\n              minHeight: 200,\n            }}\n          >\n            <h4>{col}</h4>\n\n            {/* Tasks in this column */}\n            <Column\n              title={col}\n              tasks={tasks.filter((t) => t.status === col)}\n              onEdit={handleEdit}\n              onDelete={handleDelete}\n            />\n\n            {/* Move buttons for tasks in other columns */}\n            <div style={{ marginTop: 8 }}>\n              {tasks\n                .filter((t) => t.status !== col)\n                .map((t) => (\n                  <button\n                    key={t._id}\n                    onClick={() => moveTask(t, col)}\n                    style={{ marginRight: 6, marginBottom: 4, fontSize: '0.8em' }}\n                  >\n                    Move \"{t.title}\" → {col}\n                  </button>\n                ))}\n            </div>\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}